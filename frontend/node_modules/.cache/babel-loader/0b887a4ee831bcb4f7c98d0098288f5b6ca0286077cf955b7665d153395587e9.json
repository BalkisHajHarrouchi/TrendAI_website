{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useEffect, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix default icon paths for React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst countryCoordinates = {\n  US: [37.0902, -95.7129],\n  JP: [36.2048, 138.2529],\n  DE: [51.1657, 10.4515],\n  BR: [-14.235, -51.9253],\n  KR: [35.9078, 127.7669],\n  FR: [46.6034, 1.8883]\n};\nconst colorByTrend = {\n  positive: 'rgba(34, 197, 94, 0.3)',\n  // Tailwind green-500 translucent\n  neutral: 'rgba(202, 138, 4, 0.3)',\n  // Tailwind yellow-700 translucent\n  negative: 'rgba(220, 38, 38, 0.3)' // Tailwind red-600 translucent\n};\nconst borderColorByTrend = {\n  positive: 'rgba(34, 197, 94, 0.7)',\n  neutral: 'rgba(202, 138, 4, 0.7)',\n  negative: 'rgba(220, 38, 38, 0.7)'\n};\nconst CryptoMap = () => {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(() => {\n    fetch('/trendData.json').then(res => res.json()).then(data => setTrends(data)).catch(err => console.error('Failed to load trend data:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"map-title\",\n      children: \"\\uD83C\\uDF0D Trending Crypto Globally\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), trends.map((trend, idx) => {\n          const pos = countryCoordinates[trend.isoCode];\n          if (!pos) return null;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: pos,\n            icon: new L.DivIcon({\n              html: `\n                    <div\n                      style=\"\n                        background-color: ${colorByTrend[trend.trend_label] || 'rgba(128,128,128,0.3)'};\n                        border: 2.5px solid ${borderColorByTrend[trend.trend_label] || 'rgba(128,128,128,0.7)'};\n                        width: 20px;\n                        height: 20px;\n                        border-radius: 50%;\n                        box-shadow: 0 0 8px ${colorByTrend[trend.trend_label] || 'rgba(128,128,128,0.3)'};\n                        backdrop-filter: blur(3px);\n                        transition: transform 0.3s ease;\n                      \"\n                      class=\"marker-glow\"\n                    ></div>`,\n              className: '',\n              iconSize: [24, 24],\n              iconAnchor: [12, 12],\n              popupAnchor: [0, -12]\n            }),\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: trend.coin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), \" from \", trend.country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), \"Platform: \", trend.platform, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), \"Likes: \", trend.likes, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), \"Trend: \", trend.trend_label.charAt(0).toUpperCase() + trend.trend_label.slice(1), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), \"Hashtags:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), trend.hashtags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 6,\n                  color: '#22d3ee'\n                },\n                children: [\"#\", tag]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoMap, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = CryptoMap;\nexport default CryptoMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoMap\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","useEffect","useState","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","countryCoordinates","US","JP","DE","BR","KR","FR","colorByTrend","positive","neutral","negative","borderColorByTrend","CryptoMap","_s","trends","setTrends","fetch","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","scrollWheelZoom","url","attribution","map","trend","idx","pos","isoCode","position","icon","DivIcon","html","trend_label","iconSize","iconAnchor","popupAnchor","coin","country","platform","likes","charAt","toUpperCase","slice","hashtags","tag","i","marginRight","color","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { useEffect, useState } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix default icon paths for React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst countryCoordinates = {\r\n  US: [37.0902, -95.7129],\r\n  JP: [36.2048, 138.2529],\r\n  DE: [51.1657, 10.4515],\r\n  BR: [-14.235, -51.9253],\r\n  KR: [35.9078, 127.7669],\r\n  FR: [46.6034, 1.8883],\r\n};\r\n\r\nconst colorByTrend = {\r\n  positive: 'rgba(34, 197, 94, 0.3)', // Tailwind green-500 translucent\r\n  neutral: 'rgba(202, 138, 4, 0.3)', // Tailwind yellow-700 translucent\r\n  negative: 'rgba(220, 38, 38, 0.3)', // Tailwind red-600 translucent\r\n};\r\n\r\nconst borderColorByTrend = {\r\n  positive: 'rgba(34, 197, 94, 0.7)',\r\n  neutral: 'rgba(202, 138, 4, 0.7)',\r\n  negative: 'rgba(220, 38, 38, 0.7)',\r\n};\r\n\r\nconst CryptoMap = () => {\r\n  const [trends, setTrends] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/trendData.json')\r\n      .then(res => res.json())\r\n      .then(data => setTrends(data))\r\n      .catch(err => console.error('Failed to load trend data:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"crypto-map-container\">\r\n      <h2 className=\"map-title\">\r\n        üåç Trending Crypto Globally\r\n      </h2>\r\n\r\n      <div className=\"map-wrapper\">\r\n        <MapContainer\r\n          center={[20, 0]}\r\n          zoom={2}\r\n          style={{ height: '100%', width: '100%' }}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n\r\n          {trends.map((trend, idx) => {\r\n            const pos = countryCoordinates[trend.isoCode];\r\n            if (!pos) return null;\r\n\r\n            return (\r\n              <Marker\r\n                key={idx}\r\n                position={pos}\r\n                icon={new L.DivIcon({\r\n                  html: `\r\n                    <div\r\n                      style=\"\r\n                        background-color: ${colorByTrend[trend.trend_label] || 'rgba(128,128,128,0.3)'};\r\n                        border: 2.5px solid ${borderColorByTrend[trend.trend_label] || 'rgba(128,128,128,0.7)'};\r\n                        width: 20px;\r\n                        height: 20px;\r\n                        border-radius: 50%;\r\n                        box-shadow: 0 0 8px ${colorByTrend[trend.trend_label] || 'rgba(128,128,128,0.3)'};\r\n                        backdrop-filter: blur(3px);\r\n                        transition: transform 0.3s ease;\r\n                      \"\r\n                      class=\"marker-glow\"\r\n                    ></div>`,\r\n                  className: '',\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [12, 12],\r\n                  popupAnchor: [0, -12],\r\n                })}\r\n              >\r\n                <Popup>\r\n                  <strong>{trend.coin}</strong> from {trend.country}\r\n                  <br />\r\n                  Platform: {trend.platform}\r\n                  <br />\r\n                  Likes: {trend.likes}\r\n                  <br />\r\n                  Trend: {trend.trend_label.charAt(0).toUpperCase() + trend.trend_label.slice(1)}\r\n                  <br />\r\n                  Hashtags:\r\n                  <br />\r\n                  {trend.hashtags.map((tag, i) => (\r\n                    <span key={i} style={{ marginRight: 6, color: '#22d3ee' }}>\r\n                      #{tag}\r\n                    </span>\r\n                  ))}\r\n                </Popup>\r\n              </Marker>\r\n            );\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}