{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\nconst CryptoMap = () => {\n  _s();\n  const [trendingData, setTrendingData] = useState([]);\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/data/crypto_trends.json\").then(res => res.json()).then(data => setTrendingData(data)).catch(err => console.error(\"Error loading JSON:\", err));\n  }, []);\n  const getTrend = isoCode => trendingData.find(item => item.isoCode === isoCode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-20 bg-white/5 p-6 rounded-2xl backdrop-blur-md shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-cyan-300 mb-4 text-center\",\n      children: \"\\uD83C\\uDF0D Trending Crypto by Region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-sm text-gray-400 mb-4\",\n      children: \"Hover to see what\\u2019s trending where \\u2013 platform + coin + meme snippet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoEqualEarth\",\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const isoCode = geo.properties.ISO_A2;\n          const trend = getTrend(isoCode);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: trend ? \"#06b6d4\" : \"#1f2937\",\n            stroke: \"#0e7490\",\n            onMouseEnter: () => {\n              if (trend) {\n                const {\n                  country,\n                  coin,\n                  platform,\n                  snippet\n                } = trend;\n                setTooltipContent(`<strong>${country}</strong><br />${coin} on ${platform}<br /><em>${snippet}</em>`);\n              } else {\n                setTooltipContent(`<strong>${geo.properties.NAME}</strong>`);\n              }\n            },\n            onMouseLeave: () => setTooltipContent(\"\"),\n            style: {\n              default: {\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#0ff\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#0ea5e9\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tooltip\",\n      className: \"text-xs text-white mt-4 text-center min-h-[40px]\",\n      dangerouslySetInnerHTML: {\n        __html: tooltipContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoMap, \"54jBgo66To9Xf8YFESb2JVebxa4=\");\n_c = CryptoMap;\nexport default CryptoMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoMap\");","map":{"version":3,"names":["React","useEffect","useState","ComposableMap","Geographies","Geography","jsxDEV","_jsxDEV","geoUrl","CryptoMap","_s","trendingData","setTrendingData","tooltipContent","setTooltipContent","fetch","then","res","json","data","catch","err","console","error","getTrend","isoCode","find","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","style","width","height","geography","geographies","map","geo","properties","ISO_A2","trend","fill","stroke","onMouseEnter","country","coin","platform","snippet","NAME","onMouseLeave","default","outline","hover","pressed","rsmKey","id","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\r\n\r\nconst CryptoMap = () => {\r\n  const [trendingData, setTrendingData] = useState([]);\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/data/crypto_trends.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => setTrendingData(data))\r\n      .catch((err) => console.error(\"Error loading JSON:\", err));\r\n  }, []);\r\n\r\n  const getTrend = (isoCode) =>\r\n    trendingData.find((item) => item.isoCode === isoCode);\r\n\r\n  return (\r\n    <div className=\"mt-20 bg-white/5 p-6 rounded-2xl backdrop-blur-md shadow-xl\">\r\n      <h2 className=\"text-2xl font-bold text-cyan-300 mb-4 text-center\">\r\n        üåç Trending Crypto by Region\r\n      </h2>\r\n      <p className=\"text-center text-sm text-gray-400 mb-4\">\r\n        Hover to see what‚Äôs trending where ‚Äì platform + coin + meme snippet.\r\n      </p>\r\n\r\n      <ComposableMap\r\n        projection=\"geoEqualEarth\"\r\n        style={{ width: \"100%\", height: \"auto\" }}\r\n      >\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const isoCode = geo.properties.ISO_A2;\r\n              const trend = getTrend(isoCode);\r\n\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={trend ? \"#06b6d4\" : \"#1f2937\"}\r\n                  stroke=\"#0e7490\"\r\n                  onMouseEnter={() => {\r\n                    if (trend) {\r\n                      const { country, coin, platform, snippet } = trend;\r\n                      setTooltipContent(\r\n                        `<strong>${country}</strong><br />${coin} on ${platform}<br /><em>${snippet}</em>`\r\n                      );\r\n                    } else {\r\n                      setTooltipContent(`<strong>${geo.properties.NAME}</strong>`);\r\n                    }\r\n                  }}\r\n                  onMouseLeave={() => setTooltipContent(\"\")}\r\n                  style={{\r\n                    default: { outline: \"none\" },\r\n                    hover: { fill: \"#0ff\", outline: \"none\" },\r\n                    pressed: { fill: \"#0ea5e9\", outline: \"none\" },\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n\r\n      <div\r\n        id=\"tooltip\"\r\n        className=\"text-xs text-white mt-4 text-center min-h-[40px]\"\r\n        dangerouslySetInnerHTML={{ __html: tooltipContent }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}