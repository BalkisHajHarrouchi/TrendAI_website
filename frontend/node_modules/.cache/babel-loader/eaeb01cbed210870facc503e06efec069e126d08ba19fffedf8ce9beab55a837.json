{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nimport { Tooltip } from 'react-tooltip';\nimport worldGeo from '../assets/world-110m.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoMap = () => {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(() => {\n    fetch('/cryptoTrends.json').then(res => res.json()).then(data => setTrends(data));\n  }, []);\n  const regionCoordinates = {\n    \"United States\": [-100, 40],\n    \"Japan\": [138, 37]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10 relative bg-gradient-to-b from-black to-gray-900 p-4 rounded-xl shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center text-cyan-400 mb-6\",\n      children: \"\\uD83D\\uDD25 Global Crypto Trend Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projectionConfig: {\n        scale: 160\n      },\n      className: \"w-full h-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Geographies, {\n        geography: worldGeo,\n        children: ({\n          geographies\n        }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: \"#1f2937\",\n          stroke: \"#4b5563\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), trends.map((trend, idx) => {\n        const coords = regionCoordinates[trend.region];\n        if (!coords) return null;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: coords,\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            r: 6,\n            fill: trend.sentiment >= 0 ? \"#10B981\" : \"#EF4444\",\n            className: \"cursor-pointer\",\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: `${trend.coin} on ${trend.platform}\\nMentions: ${trend.mentions}\\nSentiment: ${trend.sentiment}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-sm text-center text-gray-300\",\n      children: \"Click on regions to view trend data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoMap, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = CryptoMap;\nexport default CryptoMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoMap\");","map":{"version":3,"names":["React","useEffect","useState","ComposableMap","Geographies","Geography","Marker","Tooltip","worldGeo","jsxDEV","_jsxDEV","CryptoMap","_s","trends","setTrends","fetch","then","res","json","data","regionCoordinates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","projectionConfig","scale","geography","geographies","map","geo","fill","stroke","rsmKey","trend","idx","coords","region","coordinates","r","sentiment","coin","platform","mentions","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport worldGeo from '../assets/world-110m.json';\r\n\r\nconst CryptoMap = () => {\r\n  const [trends, setTrends] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/cryptoTrends.json')\r\n      .then((res) => res.json())\r\n      .then((data) => setTrends(data));\r\n  }, []);\r\n\r\n  const regionCoordinates = {\r\n    \"United States\": [-100, 40],\r\n    \"Japan\": [138, 37],\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-10 relative bg-gradient-to-b from-black to-gray-900 p-4 rounded-xl shadow-xl\">\r\n      <h2 className=\"text-3xl font-bold text-center text-cyan-400 mb-6\">ðŸ”¥ Global Crypto Trend Map</h2>\r\n      <ComposableMap projectionConfig={{ scale: 160 }} className=\"w-full h-auto\">\r\n        <Geographies geography={worldGeo}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                fill=\"#1f2937\"\r\n                stroke=\"#4b5563\"\r\n              />\r\n            ))\r\n          }\r\n        </Geographies>\r\n\r\n        {trends.map((trend, idx) => {\r\n          const coords = regionCoordinates[trend.region];\r\n          if (!coords) return null;\r\n\r\n          return (\r\n            <Marker key={idx} coordinates={coords}>\r\n              <circle r={6} fill={trend.sentiment >= 0 ? \"#10B981\" : \"#EF4444\"} className=\"cursor-pointer\">\r\n                <title>\r\n                  {`${trend.coin} on ${trend.platform}\\nMentions: ${trend.mentions}\\nSentiment: ${trend.sentiment}`}\r\n                </title>\r\n              </circle>\r\n            </Marker>\r\n          );\r\n        })}\r\n      </ComposableMap>\r\n\r\n      <div className=\"mt-6 text-sm text-center text-gray-300\">\r\n        Click on regions to view trend data.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}