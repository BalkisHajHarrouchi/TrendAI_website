{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\TikTok-Api-main\\\\ui\\\\src\\\\components\\\\Banner3DSlider.jsx\";\nimport React from \"react\";\nimport \"./Banner3DSlider.css\";\n\n/**\r\n * images can be:\r\n *  - string: \"/images/pic.jpg\" or \"/videos/clip.mp4\"\r\n *  - object: { src, type?, fit?, poster?, bg? }\r\n *      type:  \"image\" | \"video\" (auto-detected from extension if omitted)\r\n *      fit:   \"contain\" | \"cover\" (default \"cover\")\r\n *      poster: string (video poster)\r\n *      bg:    CSS background value for the card (e.g., \"transparent\" or \"rgba(...)\")\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner3DSlider({\n  images = [],\n  title = \"\",\n  subtitle = \"\",\n  authorTitle = \"\",\n  authorRole = \"\",\n  authorText = \"\",\n  modelImage = \"/images/hero.png\" // set to null to hide silhouette\n}) {\n  const showContent = Boolean(title || subtitle || authorTitle || authorRole || authorText || modelImage);\n  const items = images.map(entry => typeof entry === \"string\" ? {\n    src: entry\n  } : entry);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      style: {\n        \"--quantity\": items.length\n      },\n      children: items.map((item, i) => {\n        const isVideo = item.type === \"video\" || /\\.(mp4|webm|ogg)$/i.test(item.src);\n        const cls = `media ${item.fit === \"contain\" ? \"contain\" : \"\"}`;\n        const style = item.bg ? {\n          background: item.bg\n        } : undefined;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          style: {\n            \"--position\": i + 1\n          },\n          children: isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n            className: cls,\n            style: style,\n            src: item.src,\n            poster: item.poster,\n            playsInline: true,\n            muted: true,\n            loop: true,\n            autoPlay: true,\n            preload: \"metadata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: cls,\n            style: style,\n            src: item.src,\n            alt: `slide-${i + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-content\": title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: authorTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: authorRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: authorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: 10,\n            opacity: 0.8\n          },\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), !!modelImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model\",\n        style: {\n          backgroundImage: `url(${modelImage})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Banner3DSlider;\nvar _c;\n$RefreshReg$(_c, \"Banner3DSlider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Banner3DSlider","images","title","subtitle","authorTitle","authorRole","authorText","modelImage","showContent","Boolean","items","map","entry","src","className","children","style","length","item","i","isVideo","type","test","cls","fit","bg","background","undefined","poster","playsInline","muted","loop","autoPlay","preload","fileName","_jsxFileName","lineNumber","columnNumber","alt","marginTop","opacity","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/TikTok-Api-main/ui/src/components/Banner3DSlider.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Banner3DSlider.css\";\r\n\r\n/**\r\n * images can be:\r\n *  - string: \"/images/pic.jpg\" or \"/videos/clip.mp4\"\r\n *  - object: { src, type?, fit?, poster?, bg? }\r\n *      type:  \"image\" | \"video\" (auto-detected from extension if omitted)\r\n *      fit:   \"contain\" | \"cover\" (default \"cover\")\r\n *      poster: string (video poster)\r\n *      bg:    CSS background value for the card (e.g., \"transparent\" or \"rgba(...)\")\r\n */\r\nexport default function Banner3DSlider({\r\n  images = [],\r\n  title = \"\",\r\n  subtitle = \"\",\r\n  authorTitle = \"\",\r\n  authorRole = \"\",\r\n  authorText = \"\",\r\n  modelImage = \"/images/hero.png\", // set to null to hide silhouette\r\n}) {\r\n  const showContent =\r\n    Boolean(title || subtitle || authorTitle || authorRole || authorText || modelImage);\r\n\r\n  const items = images.map((entry) =>\r\n    typeof entry === \"string\" ? { src: entry } : entry\r\n  );\r\n\r\n  return (\r\n    <div className=\"banner relative\">\r\n      {/* 3D Slider */}\r\n      <div className=\"slider\" style={{ \"--quantity\": items.length }}>\r\n        {items.map((item, i) => {\r\n          const isVideo =\r\n            item.type === \"video\" || /\\.(mp4|webm|ogg)$/i.test(item.src);\r\n          const cls = `media ${item.fit === \"contain\" ? \"contain\" : \"\"}`;\r\n          const style = item.bg ? { background: item.bg } : undefined;\r\n\r\n          return (\r\n            <div className=\"item\" key={i} style={{ \"--position\": i + 1 }}>\r\n              {isVideo ? (\r\n                <video\r\n                  className={cls}\r\n                  style={style}\r\n                  src={item.src}\r\n                  poster={item.poster}\r\n                  playsInline\r\n                  muted\r\n                  loop\r\n                  autoPlay\r\n                  preload=\"metadata\"\r\n                />\r\n              ) : (\r\n                <img className={cls} style={style} src={item.src} alt={`slide-${i + 1}`} />\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Optional content layer (renders only if any text/model provided) */}\r\n      {showContent && (\r\n        <div className=\"content\">\r\n          <h1 data-content={title}>{title}</h1>\r\n          <div className=\"author\">\r\n            <h2>{authorTitle}</h2>\r\n            <p><b>{authorRole}</b></p>\r\n            <p>{authorText}</p>\r\n            <p style={{ marginTop: 10, opacity: 0.8 }}>{subtitle}</p>\r\n          </div>\r\n          {!!modelImage && (\r\n            <div className=\"model\" style={{ backgroundImage: `url(${modelImage})` }} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}