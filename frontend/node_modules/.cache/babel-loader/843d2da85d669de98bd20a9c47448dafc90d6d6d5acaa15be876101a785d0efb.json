{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link as ScrollLink } from 'react-scroll';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [section, setSection] = useState('home');\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      const visible = entries.find(entry => entry.isIntersecting);\n      if (visible) {\n        setSection(visible.target.id);\n      }\n    }, {\n      threshold: 0.6\n    });\n    const sections = document.querySelectorAll('section');\n    sections.forEach(section => observer.observe(section));\n    return () => {\n      sections.forEach(section => observer.unobserve(section));\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `header glass-${section}`,\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"home\",\n        smooth: true,\n        duration: 500,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"crypto\",\n        smooth: true,\n        duration: 500,\n        children: \"Crypto Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"video\",\n        smooth: true,\n        duration: 500,\n        children: \"Video Gen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"image\",\n        smooth: true,\n        duration: 500,\n        children: \"Image Gen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"sG9oLtZQIGWWc1sQZC/Sb8D+lMM=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Link","ScrollLink","jsxDEV","_jsxDEV","Header","_s","section","setSection","observer","IntersectionObserver","entries","visible","find","entry","isIntersecting","target","id","threshold","sections","document","querySelectorAll","forEach","observe","unobserve","className","children","to","smooth","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link as ScrollLink } from 'react-scroll';\nimport './Header.css';\n\nconst Header = () => {\n  const [section, setSection] = useState('home');\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const visible = entries.find((entry) => entry.isIntersecting);\n        if (visible) {\n          setSection(visible.target.id);\n        }\n      },\n      {\n        threshold: 0.6,\n      }\n    );\n\n    const sections = document.querySelectorAll('section');\n    sections.forEach((section) => observer.observe(section));\n\n    return () => {\n      sections.forEach((section) => observer.unobserve(section));\n    };\n  }, []);\n\n  return (\n    <header className={`header glass-${section}`}>\n      <nav className=\"nav\">\n        <ScrollLink to=\"home\" smooth={true} duration={500}>Home</ScrollLink>\n        <ScrollLink to=\"crypto\" smooth={true} duration={500}>Crypto Trend</ScrollLink>\n        <ScrollLink to=\"video\" smooth={true} duration={500}>Video Gen</ScrollLink>\n        <ScrollLink to=\"image\" smooth={true} duration={500}>Image Gen</ScrollLink>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,IAAIC,UAAU,QAAQ,cAAc;AACjD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,MAAMC,OAAO,GAAGD,OAAO,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC;MAC7D,IAAIH,OAAO,EAAE;QACXJ,UAAU,CAACI,OAAO,CAACI,MAAM,CAACC,EAAE,CAAC;MAC/B;IACF,CAAC,EACD;MACEC,SAAS,EAAE;IACb,CACF,CAAC;IAED,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;IACrDF,QAAQ,CAACG,OAAO,CAAEf,OAAO,IAAKE,QAAQ,CAACc,OAAO,CAAChB,OAAO,CAAC,CAAC;IAExD,OAAO,MAAM;MACXY,QAAQ,CAACG,OAAO,CAAEf,OAAO,IAAKE,QAAQ,CAACe,SAAS,CAACjB,OAAO,CAAC,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAQqB,SAAS,EAAE,gBAAgBlB,OAAO,EAAG;IAAAmB,QAAA,eAC3CtB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBtB,OAAA,CAACF,UAAU;QAACyB,EAAE,EAAC,MAAM;QAACC,MAAM,EAAE,IAAK;QAACC,QAAQ,EAAE,GAAI;QAAAH,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACpE7B,OAAA,CAACF,UAAU;QAACyB,EAAE,EAAC,QAAQ;QAACC,MAAM,EAAE,IAAK;QAACC,QAAQ,EAAE,GAAI;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC9E7B,OAAA,CAACF,UAAU;QAACyB,EAAE,EAAC,OAAO;QAACC,MAAM,EAAE,IAAK;QAACC,QAAQ,EAAE,GAAI;QAAAH,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC1E7B,OAAA,CAACF,UAAU;QAACyB,EAAE,EAAC,OAAO;QAACC,MAAM,EAAE,IAAK;QAACC,QAAQ,EAAE,GAAI;QAAAH,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC3B,EAAA,CAlCID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}