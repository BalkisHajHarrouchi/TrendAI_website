{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\n// src/components/CryptoMap.jsx\nimport React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\n\n// Mock trending data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trendingData = [{\n  country: \"United States\",\n  coordinates: [-100.0, 38.0],\n  coin: \"Bitcoin\",\n  platform: \"X\",\n  meme: \"🚀 BTC to the moon!\"\n}, {\n  country: \"Japan\",\n  coordinates: [138.2529, 36.2048],\n  coin: \"Shiba Inu\",\n  platform: \"TikTok\",\n  meme: \"🐶 SHIB trending again!\"\n}, {\n  country: \"Germany\",\n  coordinates: [10.4515, 51.1657],\n  coin: \"Ethereum\",\n  platform: \"X\",\n  meme: \"🔥 ETH powering AI projects\"\n}];\nconst colorScale = scaleLinear().domain([0, trendingData.length]).range([\"#0ff\", \"#0f0\"]);\nconst CryptoMap = () => {\n  _s();\n  const [tooltip, setTooltip] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white/10 p-6 rounded-2xl shadow-xl backdrop-blur-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-cyan-300\",\n      children: \"Trend by Region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-300 text-sm mb-6\",\n      children: \"Explore where crypto coins are trending and on which platform (X or TikTok). Hover over the markers to see real-time memes, stats, and more.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full overflow-x-auto\",\n      children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {\n        children: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n        projectionConfig: {\n          scale: 140\n        },\n        className: \"w-full h-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Geographies, {\n          geography: \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\",\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: \"#1a1a1a\",\n            stroke: \"#0ff\",\n            strokeWidth: 0.1,\n            style: {\n              default: {\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#333\",\n                outline: \"none\"\n              },\n              pressed: {\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), trendingData.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: location.coordinates,\n          onMouseEnter: () => {\n            setTooltip(`<strong>${location.country}</strong><br/>\n                   Coin: ${location.coin}<br/>\n                   Platform: ${location.platform}<br/>\n                   Meme: ${location.meme}`);\n          },\n          onMouseLeave: () => {\n            setTooltip(\"\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            r: 8,\n            fill: location.platform === \"TikTok\" ? \"#ff0050\" : \"#1da1f2\",\n            stroke: \"#fff\",\n            strokeWidth: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoMap, \"imRmmxqr/iHzcc1IZzl9gSCiwJU=\");\n_c = CryptoMap;\nexport default CryptoMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoMap\");","map":{"version":3,"names":["React","useState","ComposableMap","Geographies","Geography","Marker","scaleLinear","ReactTooltip","jsxDEV","_jsxDEV","trendingData","country","coordinates","coin","platform","meme","colorScale","domain","length","range","CryptoMap","_s","tooltip","setTooltip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","projectionConfig","scale","geography","geographies","map","geo","fill","stroke","strokeWidth","style","default","outline","hover","pressed","rsmKey","location","index","onMouseEnter","onMouseLeave","r","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["// src/components/CryptoMap.jsx\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n} from \"react-simple-maps\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n// Mock trending data\r\nconst trendingData = [\r\n  {\r\n    country: \"United States\",\r\n    coordinates: [-100.0, 38.0],\r\n    coin: \"Bitcoin\",\r\n    platform: \"X\",\r\n    meme: \"🚀 BTC to the moon!\",\r\n  },\r\n  {\r\n    country: \"Japan\",\r\n    coordinates: [138.2529, 36.2048],\r\n    coin: \"Shiba Inu\",\r\n    platform: \"TikTok\",\r\n    meme: \"🐶 SHIB trending again!\",\r\n  },\r\n  {\r\n    country: \"Germany\",\r\n    coordinates: [10.4515, 51.1657],\r\n    coin: \"Ethereum\",\r\n    platform: \"X\",\r\n    meme: \"🔥 ETH powering AI projects\",\r\n  },\r\n];\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0, trendingData.length])\r\n  .range([\"#0ff\", \"#0f0\"]);\r\n\r\nconst CryptoMap = () => {\r\n  const [tooltip, setTooltip] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"bg-white/10 p-6 rounded-2xl shadow-xl backdrop-blur-md\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-cyan-300\">Trend by Region</h2>\r\n      <p className=\"text-gray-300 text-sm mb-6\">\r\n        Explore where crypto coins are trending and on which platform (X or TikTok).\r\n        Hover over the markers to see real-time memes, stats, and more.\r\n      </p>\r\n      <div className=\"w-full overflow-x-auto\">\r\n        <ReactTooltip>{tooltip}</ReactTooltip>\r\n        <ComposableMap\r\n          projectionConfig={{ scale: 140 }}\r\n          className=\"w-full h-auto\"\r\n        >\r\n          <Geographies geography=\"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\">\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill=\"#1a1a1a\"\r\n                  stroke=\"#0ff\"\r\n                  strokeWidth={0.1}\r\n                  style={{\r\n                    default: { outline: \"none\" },\r\n                    hover: { fill: \"#333\", outline: \"none\" },\r\n                    pressed: { outline: \"none\" },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n\r\n          {trendingData.map((location, index) => (\r\n            <Marker\r\n              key={index}\r\n              coordinates={location.coordinates}\r\n              onMouseEnter={() => {\r\n                setTooltip(\r\n                  `<strong>${location.country}</strong><br/>\r\n                   Coin: ${location.coin}<br/>\r\n                   Platform: ${location.platform}<br/>\r\n                   Meme: ${location.meme}`\r\n                );\r\n              }}\r\n              onMouseLeave={() => {\r\n                setTooltip(\"\");\r\n              }}\r\n            >\r\n              <circle\r\n                r={8}\r\n                fill={location.platform === \"TikTok\" ? \"#ff0050\" : \"#1da1f2\"}\r\n                stroke=\"#fff\"\r\n                strokeWidth={1}\r\n              />\r\n            </Marker>\r\n          ))}\r\n        </ComposableMap>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}