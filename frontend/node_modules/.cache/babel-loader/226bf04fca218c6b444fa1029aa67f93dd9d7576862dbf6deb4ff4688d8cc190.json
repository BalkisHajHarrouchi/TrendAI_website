{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isoToCoords = {\n  US: [37.0902, -95.7129],\n  JP: [36.2048, 138.2529],\n  DE: [51.1657, 10.4515]\n};\nconst CryptoTrendMap = () => {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(() => {\n    const loadData = async () => {\n      const res = await fetch('/trends.json');\n      const json = await res.json();\n      setTrends(json);\n    };\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20, 0],\n    zoom: 2,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), trends.map((trend, index) => {\n      const coords = isoToCoords[trend.isoCode];\n      if (!coords) return null;\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: coords,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: trend.coin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 44\n          }, this), \"Platform: \", trend.platform, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this), \"Mentions: \", trend.mentions, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this), \"Sentiment: \", trend.sentiment, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n            children: trend.snippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: trend.top_meme,\n            alt: \"meme\",\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            width: \"100\",\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: trend.top_video,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoTrendMap, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = CryptoTrendMap;\nexport default CryptoTrendMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoTrendMap\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","useEffect","useState","jsxDEV","_jsxDEV","isoToCoords","US","JP","DE","CryptoTrendMap","_s","trends","setTrends","loadData","res","fetch","json","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","trend","index","coords","isoCode","position","coin","platform","mentions","sentiment","snippet","src","top_meme","alt","controls","top_video","type","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst isoToCoords = {\r\n  US: [37.0902, -95.7129],\r\n  JP: [36.2048, 138.2529],\r\n  DE: [51.1657, 10.4515]\r\n};\r\n\r\nconst CryptoTrendMap = () => {\r\n  const [trends, setTrends] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const res = await fetch('/trends.json');\r\n      const json = await res.json();\r\n      setTrends(json);\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={[20, 0]} zoom={2} style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {trends.map((trend, index) => {\r\n        const coords = isoToCoords[trend.isoCode];\r\n        if (!coords) return null;\r\n\r\n        return (\r\n          <Marker key={index} position={coords}>\r\n            <Popup>\r\n              <strong>{trend.coin}</strong><br />\r\n              Platform: {trend.platform}<br />\r\n              Mentions: {trend.mentions}<br />\r\n              Sentiment: {trend.sentiment}<br />\r\n              <em>{trend.snippet}</em><br />\r\n              <img src={trend.top_meme} alt=\"meme\" width=\"100\" />\r\n              <video width=\"100\" controls>\r\n                <source src={trend.top_video} type=\"video/mp4\" />\r\n              </video>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      })}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default CryptoTrendMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}