{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMEN\\\\Downloads\\\\trendAIApp\\\\trendAIApp\\\\src\\\\components\\\\CryptoMap.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useEffect, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Marker icons by trend label\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconByTrend = {\n  positive: new L.Icon({\n    iconUrl: '/green-pin.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34]\n  }),\n  neutral: new L.Icon({\n    iconUrl: '/yellow-pin.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34]\n  }),\n  negative: new L.Icon({\n    iconUrl: '/red-pin.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34]\n  })\n};\nconst countryCoordinates = {\n  US: [37.0902, -95.7129],\n  JP: [36.2048, 138.2529],\n  DE: [51.1657, 10.4515],\n  BR: [-14.235, -51.9253],\n  KR: [35.9078, 127.7669],\n  FR: [46.6034, 1.8883]\n};\nconst CryptoMap = () => {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(() => {\n    fetch('/trendData.json').then(res => res.json()).then(data => setTrends(data)).catch(err => console.error('Failed to load trend data:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"map-title\",\n      children: \"\\uD83C\\uDF0D Trending Crypto Globally\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), trends.map((trend, idx) => {\n          const pos = countryCoordinates[trend.isoCode];\n          const icon = iconByTrend[trend.trend_label] || iconByTrend.neutral;\n          if (!pos) return null;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: pos,\n            icon: icon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: trend.coin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), \" from \", trend.country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 69\n              }, this), \"Platform: \", trend.platform, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 45\n              }, this), \"Likes: \", trend.likes, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 39\n              }, this), \"Trend: \", trend.trend_label, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 45\n              }, this), \"Hashtags: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), trend.hashtags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 4,\n                  color: '#00ffff'\n                },\n                children: tag\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoMap, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = CryptoMap;\nexport default CryptoMap;\nvar _c;\n$RefreshReg$(_c, \"CryptoMap\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","useEffect","useState","L","jsxDEV","_jsxDEV","iconByTrend","positive","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","neutral","negative","countryCoordinates","US","JP","DE","BR","KR","FR","CryptoMap","_s","trends","setTrends","fetch","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","scrollWheelZoom","url","attribution","map","trend","idx","pos","isoCode","icon","trend_label","position","coin","country","platform","likes","hashtags","tag","i","marginRight","color","_c","$RefreshReg$"],"sources":["C:/Users/OMEN/Downloads/trendAIApp/trendAIApp/src/components/CryptoMap.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { useEffect, useState } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Marker icons by trend label\r\nconst iconByTrend = {\r\n  positive: new L.Icon({\r\n    iconUrl: '/green-pin.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34]\r\n  }),\r\n  neutral: new L.Icon({\r\n    iconUrl: '/yellow-pin.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34]\r\n  }),\r\n  negative: new L.Icon({\r\n    iconUrl: '/red-pin.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34]\r\n  })\r\n};\r\n\r\nconst countryCoordinates = {\r\n  US: [37.0902, -95.7129],\r\n  JP: [36.2048, 138.2529],\r\n  DE: [51.1657, 10.4515],\r\n  BR: [-14.235, -51.9253],\r\n  KR: [35.9078, 127.7669],\r\n  FR: [46.6034, 1.8883]\r\n};\r\n\r\nconst CryptoMap = () => {\r\n  const [trends, setTrends] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/trendData.json')\r\n      .then(res => res.json())\r\n      .then(data => setTrends(data))\r\n      .catch(err => console.error('Failed to load trend data:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"crypto-map-container\">\r\n      <h2 className=\"map-title\">üåç Trending Crypto Globally</h2>\r\n\r\n      <div className=\"map-wrapper\">\r\n        <MapContainer center={[20, 0]} zoom={2} style={{ height: '100%', width: '100%' }} scrollWheelZoom={true}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n\r\n          {trends.map((trend, idx) => {\r\n            const pos = countryCoordinates[trend.isoCode];\r\n            const icon = iconByTrend[trend.trend_label] || iconByTrend.neutral;\r\n\r\n            if (!pos) return null;\r\n\r\n            return (\r\n              <Marker key={idx} position={pos} icon={icon}>\r\n                <Popup>\r\n                  <strong>{trend.coin}</strong> from {trend.country}<br />\r\n                  Platform: {trend.platform}<br />\r\n                  Likes: {trend.likes}<br />\r\n                  Trend: {trend.trend_label}<br />\r\n                  Hashtags: <br />\r\n                  {trend.hashtags.map((tag, i) => (\r\n                    <span key={i} style={{ marginRight: 4, color: '#00ffff' }}>{tag}</span>\r\n                  ))}\r\n                </Popup>\r\n              </Marker>\r\n            );\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}